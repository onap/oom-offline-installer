---
kube_prometheus_stack:
  k8s_namespace: kube-prometheus
  grafana_dashboards:
    - { src: "grafana_dashboard.json", dest: "{{ nfs_mount_path }}/kube-prometheus/kube-prometheus-grafana/dashboards/custom/" }
    - { src: "grafana_home.json", dest: "{{ nfs_mount_path }}/kube-prometheus/kube-prometheus-grafana/dashboards/" }
    - { src: "grafana_dashboard_onap_mariadb.json", dest: "{{ nfs_mount_path }}/kube-prometheus/kube-prometheus-grafana/dashboards/onap/" }
  helm_release_name: kube-prometheus-stack
  helm_timeout: "240s"
  helm_values_file: "{{ app_data_path }}/kube_prometheus_values.yaml"
  helm_values:
    grafana:
      adminPassword: grafana
      env:
        GF_DASHBOARDS_DEFAULT_HOME_DASHBOARD_PATH: /var/lib/grafana/dashboards/grafana_home.json
      dashboardProviders:
        dashboardproviders.yaml:
          apiVersion: 1
          providers:
            - name: 'custom'
              orgId: 1
              folder: 'Custom'
              type: file
              disableDeletion: false
              editable: true
              updateIntervalSeconds: 60
              options:
                path: /var/lib/grafana/dashboards/custom
            - name: 'onap'
              orgId: 1
              folder: 'ONAP'
              type: file
              disableDeletion: false
              editable: true
              updateIntervalSeconds: 60
              options:
                path: /var/lib/grafana/dashboards/onap
      persistence:
        type: pvc
        enabled: true
        storageClassName: kube-prometheus-grafana
        accessModes:
          - ReadWriteOnce
        size: 4Gi
      service:
        enabled: true
        type: NodePort
        port: 80
        targetPort: 3000
        annotations: {}
        labels: {}
        portName: service
    prometheus:
      prometheusSpec:
        scrapeInterval: 60s
        serviceMonitorNamespaceSelector: {}
        serviceMonitorSelector: {}
        serviceMonitorSelectorNilUsesHelmValues: false
        storageSpec:
          disableMountSubPath: true
          volumeClaimTemplate:
            spec:
              storageClassName: kube-prometheus-prometheus
              accessModes: ["ReadWriteOnce"]
              resources:
                requests:
                  storage: 6Gi
    prometheusOperator:
      admissionWebhooks:
        patch:
          image:
            sha: ''
