{
  "comments": [
    {
      "key": {
        "uuid": "9adffdf1_db4b40af",
        "filename": "ansible/run_playbook.sh",
        "patchSetId": 1
      },
      "lineNbr": 126,
      "author": {
        "id": 4965
      },
      "writtenOn": "2019-01-17T01:03:51Z",
      "side": 1,
      "message": "To be honest I\u0027m not a fan of reusing the same directories for every installer call. How about creating a separate directory like run_\u003ctimestamp\u003e for all output files?",
      "revId": "b8556382db48e4dbd576bf156107ecbf40131810",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9adffdf1_f7289834",
        "filename": "ansible/run_playbook.sh",
        "patchSetId": 1
      },
      "lineNbr": 126,
      "author": {
        "id": 4886
      },
      "writtenOn": "2019-01-17T09:39:18Z",
      "side": 1,
      "message": "Ansible log is appended with every line prefixed with a timestamp and this installer is probably used only one time - how many times the customer will install the onap? On the other hand I am not against this - adding the timestamp to the logfile will be little hack though - ansible.cfg must be either templated or I will ignore it and use env. variable - I will try to use the best solution: if no env. variable set use the ansible.cfg",
      "parentUuid": "9adffdf1_db4b40af",
      "revId": "b8556382db48e4dbd576bf156107ecbf40131810",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9adffdf1_f7b658f8",
        "filename": "ansible/run_playbook.sh",
        "patchSetId": 1
      },
      "lineNbr": 126,
      "author": {
        "id": 4965
      },
      "writtenOn": "2019-01-17T09:57:43Z",
      "side": 1,
      "message": "well in terms of logs yeah it\u0027s not a big deal as they can be appended just like system logs but still it\u0027s nice to have a \"reboot\" delimiter just for convenience.\n\nThis comment is also related to the surrounding lines which are mounted rw.\nI\u0027m not sure if there is a need to template ansible cfg?\nMaybe you could just create those dirs in the beginning of this script? sth like:\nRUN_DIR\u003d$ANSIBLE_DIR/ansible_run_`date +%s`\nmkdir -p $RUN_DIR/ssh\nmkdir -p $RUN_DIR/application\nmkdir -p $RUN_DIR/log\nmkdir -p $RUN_DIR/certs\n\nand the mount this rw inside the container/chroot\n\nTo be honest the most important reason for my comment was mounting .ssh dir of current user rw into the environment not logs itself but as this pattern is repeating this may be a good opportunity to fix this;)",
      "parentUuid": "9adffdf1_f7289834",
      "revId": "b8556382db48e4dbd576bf156107ecbf40131810",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9adffdf1_77990878",
        "filename": "ansible/run_playbook.sh",
        "patchSetId": 1
      },
      "lineNbr": 126,
      "author": {
        "id": 4886
      },
      "writtenOn": "2019-01-17T10:14:22Z",
      "side": 1,
      "message": "application is prepopulated with a code (that is the point) - not mounted empty and populated, that goes for .ssh too, that would mean I would have to copy those dirs into timestamped dirs and those to mount, and after leave it? If I do it like that ansible-log timestamped folder can be kept (to make sense) but others makes not much sense to keep - .ssh is rw because some playbook is creating keys, application is rw because some playbook at least before used it to template something - now it can maybe be ro - so for your comment - I can make log dir templated but I think that is ugly and I would like to have all logs inside one dir log",
      "parentUuid": "9adffdf1_f7b658f8",
      "revId": "b8556382db48e4dbd576bf156107ecbf40131810",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9adffdf1_371940d7",
        "filename": "ansible/run_playbook.sh",
        "patchSetId": 1
      },
      "lineNbr": 126,
      "author": {
        "id": 4965
      },
      "writtenOn": "2019-01-17T11:02:09Z",
      "side": 1,
      "message": "you are right in this case but this way it\u0027s also ugly as even through it runs inside chroot/container it modifies important parts of host system.\nif we need to populate directories maybe we should use overlay instead of bind mount?",
      "parentUuid": "9adffdf1_77990878",
      "revId": "b8556382db48e4dbd576bf156107ecbf40131810",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9adffdf1_378060bf",
        "filename": "ansible/run_playbook.sh",
        "patchSetId": 1
      },
      "lineNbr": 126,
      "author": {
        "id": 4886
      },
      "writtenOn": "2019-01-17T11:07:54Z",
      "side": 1,
      "message": ".ssh is ugly and in my case I dont modify it when I run playbooks because I setup the ssh keys before I am running any playbook. But there is a playbook which do this for a user - distributes new ssh keypair across the nodes and should be permanent so no overlay in thsi case - this is for another debate. For appliacation dir - I am not certain if it needs to be rw or not - also this can be separate commit - in this case I will just redo the log stuff",
      "parentUuid": "9adffdf1_371940d7",
      "revId": "b8556382db48e4dbd576bf156107ecbf40131810",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    }
  ]
}