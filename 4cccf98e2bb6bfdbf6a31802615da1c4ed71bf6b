{
  "comments": [
    {
      "key": {
        "uuid": "7715e923_14696421",
        "filename": "ansible/roles/resource-data/tasks/unarchive-resource.yml",
        "patchSetId": 2
      },
      "lineNbr": 36,
      "author": {
        "id": 5052
      },
      "writtenOn": "2019-02-25T14:38:41Z",
      "side": 1,
      "message": "what if user specified directory that was already present before execution?",
      "revId": "4cccf98e2bb6bfdbf6a31802615da1c4ed71bf6b",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d0f3e342_33817170",
        "filename": "ansible/roles/resource-data/tasks/unarchive-resource.yml",
        "patchSetId": 2
      },
      "lineNbr": 36,
      "author": {
        "id": 3957
      },
      "writtenOn": "2019-02-26T08:46:21Z",
      "side": 1,
      "message": "yes that\u0027s a problem. Same problem with the original code.\nRelates to bad idempotence here because of using shell command to transfer.",
      "parentUuid": "7715e923_14696421",
      "revId": "4cccf98e2bb6bfdbf6a31802615da1c4ed71bf6b",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f9ff0c6e_008dd5aa",
        "filename": "ansible/roles/resource-data/tasks/unarchive-resource.yml",
        "patchSetId": 2
      },
      "lineNbr": 36,
      "author": {
        "id": 4886
      },
      "writtenOn": "2019-02-26T13:14:11Z",
      "side": 1,
      "message": "I am curious how you will solve this - there was a reason why I made it like this - I said already that is idempotent enough - other option is to override it every time (danger and slow) or do checksum on every file in source and target and sync it - safe but difficult and slow...prove me wrong",
      "parentUuid": "d0f3e342_33817170",
      "revId": "4cccf98e2bb6bfdbf6a31802615da1c4ed71bf6b",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0bacae26_93818be5",
        "filename": "ansible/roles/resource-data/tasks/unarchive-resource.yml",
        "patchSetId": 2
      },
      "lineNbr": 36,
      "author": {
        "id": 3957
      },
      "writtenOn": "2019-02-26T16:02:36Z",
      "side": 1,
      "message": "Yes the problem remains.\nIt\u0027s not going to be addressed in this commit and will be exactly same level with original code.\n\nWe need to address that (if needed) in separate commit.\n\nThe problem is not easy and maybe that is the reason why no Ansible module handle this. \nI agree it might be enough idempotence for us.\n\nIf we want to make it better we could implement our own Ansible module for this.\nFirst study available Ansible modules for this and why they do not address this.\nMaybe fork one of them having most of the needed functionality rather than creating our own from cratch?\nSome kind of checksum checking I guess most generic... Maybe store the checksum of the extracted package to some (user defined) file in the target host and module can use that to check the new tar.",
      "parentUuid": "f9ff0c6e_008dd5aa",
      "revId": "4cccf98e2bb6bfdbf6a31802615da1c4ed71bf6b",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8dfe3e45_f6bffc2b",
        "filename": "ansible/roles/resource-data/tasks/unarchive-resource.yml",
        "patchSetId": 2
      },
      "lineNbr": 36,
      "author": {
        "id": 4886
      },
      "writtenOn": "2019-02-27T09:40:35Z",
      "side": 1,
      "message": "yesterday on the meeting, someone proposed to add a \"signal\" file, that playbook is done...it is almost the same function like what that dir. check does but this file would be created after successfull run, it will help, it is not perfect solution, but it is easy and solves the issues someone had with current solution",
      "parentUuid": "0bacae26_93818be5",
      "revId": "4cccf98e2bb6bfdbf6a31802615da1c4ed71bf6b",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "30ed2a31_fcb16e2b",
        "filename": "ansible/roles/resource-data/tasks/unarchive-resource.yml",
        "patchSetId": 2
      },
      "lineNbr": 36,
      "author": {
        "id": 5239
      },
      "writtenOn": "2019-02-28T12:17:20Z",
      "side": 1,
      "message": "you can also at the end of the upload change dir name, for example onap_temp to onap without any new flag files",
      "parentUuid": "8dfe3e45_f6bffc2b",
      "revId": "4cccf98e2bb6bfdbf6a31802615da1c4ed71bf6b",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "50d841e5_4d37b3dd",
        "filename": "ansible/roles/resource-data/tasks/upload_resources.yml",
        "patchSetId": 2
      },
      "lineNbr": 8,
      "author": {
        "id": 5239
      },
      "writtenOn": "2019-02-28T12:17:20Z",
      "side": 1,
      "message": "not all the systems have nfs named that way, vide Ubuntu",
      "range": {
        "startLine": 8,
        "startChar": 14,
        "endLine": 8,
        "endChar": 97
      },
      "revId": "4cccf98e2bb6bfdbf6a31802615da1c4ed71bf6b",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    }
  ]
}