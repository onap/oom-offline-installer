{
  "comments": [
    {
      "key": {
        "uuid": "41dbd148_42d31992",
        "filename": "tools/helm-healer.sh",
        "patchSetId": 1
      },
      "lineNbr": 43,
      "author": {
        "id": 3957
      },
      "writtenOn": "2019-11-16T09:06:32Z",
      "side": 1,
      "message": "what parts are really related to onap??\n- Is the functionality expecting onap\u0027s implemented helm deploy plugin is used? Or does this work also when normal plain helm used?\n- Can this be used also with minikube?\n\nPlease do not just answer my comment, but directly improve the describtion part if feasible.",
      "range": {
        "startLine": 35,
        "startChar": 5,
        "endLine": 43,
        "endChar": 0
      },
      "revId": "7e1861c6b8ba6a1de63a876248bbf4d02c9538ff",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cbf11a94_c5b5cbf3",
        "filename": "tools/helm-healer.sh",
        "patchSetId": 1
      },
      "lineNbr": 43,
      "author": {
        "id": 4886
      },
      "writtenOn": "2019-11-18T08:46:05Z",
      "side": 1,
      "message": "@Samuli sorry :) I can improve the description, but this script is part of offline-installer and that is part of OOM and OOM uses that helm deploy plugin. That means that this script is not intended to be used outside of these constraints - it is just a tool to heal not so healthy ONAP installation. So to answer your question - as of now, this tool relies on that plugin.\n\nI will soon dig deeper to that deploy plugin and I left myself some TODOs in this script to deal with it - so in the future it can be used outside of ONAP and OOM, but then again - why would anyone want to use it? This script is just a band aid for broken ONAP installation.",
      "parentUuid": "41dbd148_42d31992",
      "range": {
        "startLine": 35,
        "startChar": 5,
        "endLine": 43,
        "endChar": 0
      },
      "revId": "7e1861c6b8ba6a1de63a876248bbf4d02c9538ff",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1c6e571f_71a793ce",
        "filename": "tools/helm-healer.sh",
        "patchSetId": 1
      },
      "lineNbr": 109,
      "author": {
        "id": 5097
      },
      "writtenOn": "2019-11-18T10:04:21Z",
      "side": 1,
      "message": "To me, this help msg suggests that there\u0027s a usage scenario for \"-c\" opt without any args to it while synopsis says \"[(-c|--component \u003ccomponent release name\u003e)...|(-D|--delete-all)]\" which claims otherwise (\"-c\" always has to be followed by an arg). \n\n\"-c onap-\u003ccomponent\u003e --delete-all\" are mutually exclusive and this fails only if arg to \"-c\" is given; if i run \"/tmp/helm-healer.sh -c --delete-all\" it doesn\u0027t fail but continues just producing an error:\n\nINFO: Explicitly asked for component redeploy:  --delete-all \nERROR: Component release name \u0027--delete-all\u0027 does not match release prefix: onap (SKIP) \nINFO: Redeploy onap... \nINFO: helmfetching local/onap\n\n\nMy point here is: is using \"-c\" without arg an alternative usage scenario (undocumented?) or it\u0027s just buggy input args validation?",
      "range": {
        "startLine": 106,
        "startChar": 0,
        "endLine": 109,
        "endChar": 28
      },
      "revId": "7e1861c6b8ba6a1de63a876248bbf4d02c9538ff",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "37f48d66_ae2b392c",
        "filename": "tools/helm-healer.sh",
        "patchSetId": 1
      },
      "lineNbr": 109,
      "author": {
        "id": 4886
      },
      "writtenOn": "2019-11-18T10:20:39Z",
      "side": 1,
      "message": "I don\u0027t see the confusion - I reference here an option the syntax is stated above (-c \u003ccomponent\u003e) - this is just a bunch of more words to describe the purpose for it. Look at other paragraphs: --prefix, --file also requires value and I omitted the value in the paragraphs. Maybe my brain is just wired differently and I should rewrite this whole help if it is not clear.\n\n\"is using \"-c\" without arg an alternative usage scenario (undocumented?)\"\n\nNo, it requires value\n\n\"it\u0027s just buggy input args validation\"\n\nNo, at least the output you received is as intended after -c must follow a component name.\n\nAs you correctly wrote -c and -D are mutually exclusive and scripts handle this correctly. Or not?",
      "parentUuid": "1c6e571f_71a793ce",
      "range": {
        "startLine": 106,
        "startChar": 0,
        "endLine": 109,
        "endChar": 28
      },
      "revId": "7e1861c6b8ba6a1de63a876248bbf4d02c9538ff",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2277affe_03188221",
        "filename": "tools/helm-healer.sh",
        "patchSetId": 1
      },
      "lineNbr": 109,
      "author": {
        "id": 5097
      },
      "writtenOn": "2019-11-18T10:34:47Z",
      "side": 1,
      "message": "Ah, ok, the behaviour is different depending on opts order:\n\nThis fails as expected:\n\n/tmp/helm-healer.sh --delete-all -c\nERROR: \u0027Delete all components\u0027 used already - argument mismatch \nTry help: helm-healer.sh --help\n\nThis doesn\u0027t:\n/tmp/helm-healer.sh -c --delete-all\nINFO: Explicitly asked for component redeploy:  --delete-all \nERROR: Component release name \u0027--delete-all\u0027 does not match release prefix: onap (SKIP) \nINFO: Redeploy onap... \nINFO: helmfetching local/onap\n\nI only tested it in the latter form that\u0027s why i asked if using \"-c\" without any arg was another usecase because it doesn\u0027t fail like the former one.\n\nBut that\u0027s just the onerous way of doing input opts and args sanitization in bash right. If it\u0027s not trivial to fix it i can live with that.",
      "parentUuid": "37f48d66_ae2b392c",
      "range": {
        "startLine": 106,
        "startChar": 0,
        "endLine": 109,
        "endChar": 28
      },
      "revId": "7e1861c6b8ba6a1de63a876248bbf4d02c9538ff",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8794b2c2_a57df416",
        "filename": "tools/helm-healer.sh",
        "patchSetId": 1
      },
      "lineNbr": 109,
      "author": {
        "id": 4886
      },
      "writtenOn": "2019-11-18T10:43:11Z",
      "side": 1,
      "message": "Well, I made a simple finite automata, so the argument parsing is quite simple: -c change state to component parsing and expects a component right after it.\n\nIf I had to take into account validation you proposed then if for some terrible reasons someone named onap component --delete-all then it would not ever delete it :) There is another way how to deal with it by using standardized special option \u0027--\u0027 after which no option is interpreted but that would fix only one case of -c --delete-all - the one on the very end of the command...\n\nI am maybe wrong but I think that all commands behaves in similar way:\n\n$ ssh -p -e \"ssh -p 2222\" 192.168.1.100\nBad port \u0027-e\u0027",
      "parentUuid": "2277affe_03188221",
      "range": {
        "startLine": 106,
        "startChar": 0,
        "endLine": 109,
        "endChar": 28
      },
      "revId": "7e1861c6b8ba6a1de63a876248bbf4d02c9538ff",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    }
  ]
}